"use strict";(self.webpackChunkcredo_ts_docs=self.webpackChunkcredo_ts_docs||[]).push([[6840],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function g(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):g(g({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||a;return t?o.createElement(f,g(g({ref:n},c),{},{components:t})):o.createElement(f,g({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,g=new Array(a);g[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:r,g[1]=i;for(var s=2;s<a;s++)g[s]=t[s];return o.createElement.apply(null,g)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6770:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>g,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=t(87462),r=(t(67294),t(3905));const a={},g="Logging",i={unversionedId:"tutorials/agent-config/logging",id:"tutorials/agent-config/logging",title:"Logging",description:"Using the Default ConsoleLogger",source:"@site/guides/tutorials/agent-config/logging.md",sourceDirName:"tutorials/agent-config",slug:"/tutorials/agent-config/logging",permalink:"/guides/tutorials/agent-config/logging",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Agent Config",permalink:"/guides/tutorials/agent-config/"},next:{title:"Create a connection",permalink:"/guides/tutorials/create-a-connection"}},l={},s=[{value:"Using the Default ConsoleLogger",id:"using-the-default-consolelogger",level:2},{value:"Creating your own Logger",id:"creating-your-own-logger",level:2}],c={toc:s},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"logging"},"Logging"),(0,r.kt)("h2",{id:"using-the-default-consolelogger"},"Using the Default ConsoleLogger"),(0,r.kt)("p",null,"To enable logging inside the framework a logger must be passed to the agent config. A simple ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsoleLogger")," can be imported from the framework."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import type { InitConfig } from '@credo-ts/core'\nimport { ConsoleLogger, LogLevel } from '@credo-ts/core'\n\nconst agentConfig: InitConfig = {\n  // ... other config properties ...\n  logger: new ConsoleLogger(LogLevel.info),\n}\n")),(0,r.kt)("h2",{id:"creating-your-own-logger"},"Creating your own Logger"),(0,r.kt)("p",null,"For more advanced use cases the ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," interface can be implemented. See the example below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Logger, LogLevel } from '@credo-ts/core'\n\nclass MyCustomLogger implements Logger {\n  public logLevel: LogLevel\n\n  public constructor(logLevel: LogLevel = LogLevel.off) {\n    this.logLevel = logLevel\n  }\n\n  public test(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public trace(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public debug(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public info(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public warn(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public error(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n\n  public fatal(message: string, data?: Record<string, any>): void {\n    console.log(message, data)\n  }\n}\n")))}p.isMDXComponent=!0}}]);