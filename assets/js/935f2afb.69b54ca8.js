"use strict";(self.webpackChunkcredo_ts_docs=self.webpackChunkcredo_ts_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"v0.5.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/guides/","docId":"index"},{"type":"category","label":"Getting started","items":[{"type":"link","label":"Prerequisites","href":"/guides/getting-started/prerequisites","docId":"getting-started/prerequisites"},{"type":"category","label":"Agent Setup","items":[{"type":"link","label":"Aries Askar","href":"/guides/getting-started/set-up/aries-askar","docId":"getting-started/set-up/aries-askar"},{"type":"link","label":"AnonCreds","href":"/guides/getting-started/set-up/anoncreds","docId":"getting-started/set-up/anoncreds"},{"type":"link","label":"Indy VDR","href":"/guides/getting-started/set-up/indy-vdr","docId":"getting-started/set-up/indy-vdr"},{"type":"link","label":"cheqd","href":"/guides/getting-started/set-up/cheqd/","docId":"getting-started/set-up/cheqd/index"}],"collapsed":true,"collapsible":true,"href":"/guides/getting-started/set-up/"}],"collapsed":true,"collapsible":true,"href":"/guides/getting-started/"},{"type":"category","label":"Concepts","items":[{"type":"link","label":"Agents","href":"/guides/concepts/agents","docId":"concepts/agents"},{"type":"link","label":"DIDs and DIDComm","href":"/guides/concepts/did-and-didcomm","docId":"concepts/did-and-didcomm"},{"type":"link","label":"Platform and Environment","href":"/guides/concepts/platform-and-environment","docId":"concepts/platform-and-environment"}],"collapsed":true,"collapsible":true,"href":"/guides/concepts/"},{"type":"category","label":"Features","items":[{"type":"link","label":"Hyperledger Aries and Aries Interop Profile","href":"/guides/features/aries","docId":"features/aries"},{"type":"link","label":"OpenID for Verifiable Credentials","href":"/guides/features/openid4vc","docId":"features/openid4vc"},{"type":"link","label":"Decentralized Identifiers","href":"/guides/features/dids","docId":"features/dids"},{"type":"link","label":"Verifiable Credentials","href":"/guides/features/credentials","docId":"features/credentials"}],"collapsed":true,"collapsible":true,"href":"/guides/features/"},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"Agent Config","items":[{"type":"link","label":"Logging","href":"/guides/tutorials/agent-config/logging","docId":"tutorials/agent-config/logging"}],"collapsed":true,"collapsible":true,"href":"/guides/tutorials/agent-config/"},{"type":"link","label":"Create a connection","href":"/guides/tutorials/create-a-connection","docId":"tutorials/create-a-connection"},{"type":"link","label":"Cheqd Did Module","href":"/guides/tutorials/cheqd/","docId":"tutorials/cheqd/index"},{"type":"link","label":"Registering a schema and credential definition on an AnonCreds Registry","href":"/guides/tutorials/registering-schema-and-credential-definition","docId":"tutorials/registering-schema-and-credential-definition"},{"type":"link","label":"Issue a credential","href":"/guides/tutorials/issue-a-credential","docId":"tutorials/issue-a-credential"},{"type":"link","label":"Mediation","href":"/guides/tutorials/mediation","docId":"tutorials/mediation"}],"collapsed":true,"collapsible":true,"href":"/guides/tutorials/"},{"type":"category","label":"Updating","items":[{"type":"link","label":"Update Assistant","href":"/guides/updating/update-assistant","docId":"updating/update-assistant"},{"type":"link","label":"Migrating from an Indy SDK Wallet to Aries Askar","href":"/guides/updating/update-indy-sdk-to-askar","docId":"updating/update-indy-sdk-to-askar"},{"type":"link","label":"Migrating from Credo 0.1.0 to 0.2.x","href":"/guides/updating/versions/0.1-to-0.2","docId":"updating/versions/0.1-to-0.2"},{"type":"link","label":"Migrating from Credo 0.2.x to 0.3.x","href":"/guides/updating/versions/0.2-to-0.3","docId":"updating/versions/0.2-to-0.3"},{"type":"link","label":"Migrating from Credo 0.3.x to 0.4.x","href":"/guides/updating/versions/0.3-to-0.4","docId":"updating/versions/0.3-to-0.4"}],"collapsed":true,"collapsible":true,"href":"/guides/updating/"},{"type":"link","label":"The Credo Ecosystem","href":"/guides/ecosystem/","docId":"ecosystem/index"},{"type":"category","label":"Extensions","items":[{"type":"link","label":"REST API","href":"/guides/extensions/rest","docId":"extensions/rest"},{"type":"link","label":"React Hooks","href":"/guides/extensions/react-hooks","docId":"extensions/react-hooks"},{"type":"link","label":"Redux Store","href":"/guides/extensions/redux-store","docId":"extensions/redux-store"},{"type":"link","label":"Push Notifications","href":"/guides/extensions/push-notifications","docId":"extensions/push-notifications"}],"collapsed":true,"collapsible":true,"href":"/guides/extensions/"}]},"docs":{"concepts/agents":{"id":"concepts/agents","title":"Agents","description":"When working with any Credo implementation, you will interact with an Credo","sidebar":"tutorialSidebar"},"concepts/did-and-didcomm":{"id":"concepts/did-and-didcomm","title":"DIDs and DIDComm","description":"DIDs","sidebar":"tutorialSidebar"},"concepts/index":{"id":"concepts/index","title":"Concepts","description":"In this section we will discuss the general concepts that are used inside the","sidebar":"tutorialSidebar"},"concepts/platform-and-environment":{"id":"concepts/platform-and-environment","title":"Platform and Environment","description":"Credo is developed to support a Node.JS and React Native environment. With this it is entirely possible to build an entire SSI ecosystem with Credo. This would use Node.JS as an issuer as a verifier, and uses React Native as a holder.","sidebar":"tutorialSidebar"},"ecosystem/index":{"id":"ecosystem/index","title":"The Credo Ecosystem","description":"The Credo ecosystem includes various components that are spread across multiple repositories. In this section we\'ll go over what these components are and how the relate to one another.","sidebar":"tutorialSidebar"},"extensions/index":{"id":"extensions/index","title":"Extensions","description":"Credo Extensions is an extensions repository to Credo. It hosts libraries built on top of Credo that don\'t necessarily belong to the core of the project.","sidebar":"tutorialSidebar"},"extensions/push-notifications":{"id":"extensions/push-notifications","title":"Push Notifications","description":"The Push Notifications plugin package provides a way for you to register your APNs and Firebase push notification token at an agent, allowing you to use push notifications directly from Credo.","sidebar":"tutorialSidebar"},"extensions/react-hooks":{"id":"extensions/react-hooks","title":"React Hooks","description":"The React Hooks package exposes useful React hooks that allow you to easily interact with Credo from a React client application.","sidebar":"tutorialSidebar"},"extensions/redux-store":{"id":"extensions/redux-store","title":"Redux Store","description":"The Redux Store is an implementation of state management that can be used to build React & React Native SSI clients using Credo.","sidebar":"tutorialSidebar"},"extensions/rest":{"id":"extensions/rest","title":"REST API","description":"The Credo REST API provides simple RESTful endpoints for Credo methods, to allow you stand up an agent for communication over the internet instantly. You simply provide your agent configuration. The REST endpoints allow you to interact with your agent over HTTP and WebSockets.","sidebar":"tutorialSidebar"},"features/aries":{"id":"features/aries","title":"Hyperledger Aries and Aries Interop Profile","description":"Initially, Credo was built as an Hyperledger Aries framework, focusing on implementing the Aries RFCs and supporting the Aries Interop Profile.","sidebar":"tutorialSidebar"},"features/credentials":{"id":"features/credentials","title":"Verifiable Credentials","description":"One of the main features of Credo is the issuance and verification of Verifiable Credentials.","sidebar":"tutorialSidebar"},"features/dids":{"id":"features/dids","title":"Decentralized Identifiers","description":"Decentralized identifiers are a core components of Credo, and used everywhere in the framework.","sidebar":"tutorialSidebar"},"features/index":{"id":"features/index","title":"Supported Features","description":"This section tries to list all the standards and features that are supported by Credo.","sidebar":"tutorialSidebar"},"features/openid4vc":{"id":"features/openid4vc","title":"OpenID for Verifiable Credentials","description":"Since Credo 0.4, support was added to receive credentials using OpenID for Verifiable Credential Issuance, and since 0.5 support was added for all the other OpenID for Verifiable Credential flows.","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting started","description":"In this section we will go over everything you need to get started on a technical level. First there are some general prerequisites for Node.JS and React Native. Credo works for creating both server-side applications (commonly but not always for creating issuer and verifier agents) and mobile applications (commonly holder agents).","sidebar":"tutorialSidebar"},"getting-started/prerequisites":{"id":"getting-started/prerequisites","title":"Prerequisites","description":"To work with Credo we need to install some dependencies and set-up our Node.JS environment. Even when creating a mobile app in React Native, we need Node.JS installed. We will go over the specific installation process for each platform. Go ahead and pick your system of choice to get started!","sidebar":"tutorialSidebar"},"getting-started/set-up/anoncreds":{"id":"getting-started/set-up/anoncreds","title":"AnonCreds","description":"The AnonCreds module provides functionality for issuing and verifying AnonCreds credentials in Credo. The AnonCreds implementation is based on AnonCreds RS, a direct implementation of the AnonCreds V1.0 specification that provides functionality like; creating a schema object, creating a credential definition object, creating a credential, verifying a proof presentation and much more.","sidebar":"tutorialSidebar"},"getting-started/set-up/aries-askar":{"id":"getting-started/set-up/aries-askar","title":"Aries Askar","description":"Aries Askar provides secure, encrypted storage and cryptographic support for encrypting, decrypting, signing and verifying data. It also provides both the Wallet and StorageService implementations for the agent.","sidebar":"tutorialSidebar"},"getting-started/set-up/cheqd/index":{"id":"getting-started/set-up/cheqd/index","title":"cheqd","description":"cheqd is a blockchain network, built in the Cosmos ecosystem for Self-Sovereign Identity (SSI). The cheqd Network leverages the cheqd DID method and enables DID-Linked Resources to be written to the network, associated with a DID and controlled using the verification methods in the DID Document.","sidebar":"tutorialSidebar"},"getting-started/set-up/index":{"id":"getting-started/set-up/index","title":"Agent Setup","description":"This guide assumes you have followed the Prerequisites, and you have a valid","sidebar":"tutorialSidebar"},"getting-started/set-up/indy-vdr":{"id":"getting-started/set-up/indy-vdr","title":"Indy VDR","description":"Hyperledger Indy VDR, Verifiable Data Registry, can be used to connect to one or more Indy Node ledger pools given sets of genesis transactions. Methods are provided to construct ledger requests and send them to the validators, collecting the results and ensuring that there is a consensus between the nodes. In the context of Credo, we mainly leverage it to register, and resolve, schemas, credential definitions and DIDs.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Intro","description":"Welcome, to the Credo community!","sidebar":"tutorialSidebar"},"tutorials/agent-config/index":{"id":"tutorials/agent-config/index","title":"Agent Config","description":"The Credo agent is very extensible. These are all the configuration options with a short description:","sidebar":"tutorialSidebar"},"tutorials/agent-config/logging":{"id":"tutorials/agent-config/logging","title":"Logging","description":"Using the Default ConsoleLogger","sidebar":"tutorialSidebar"},"tutorials/cheqd/index":{"id":"tutorials/cheqd/index","title":"Cheqd Did Module","description":"In this tutorial we will see how to use the cheqd modules in detail","sidebar":"tutorialSidebar"},"tutorials/create-a-connection":{"id":"tutorials/create-a-connection","title":"Create a connection","description":"In this tutorial we will create a connection as Acme Corp with Bob. We will","sidebar":"tutorialSidebar"},"tutorials/index":{"id":"tutorials/index","title":"Tutorials","description":"In this section we will explain some features that everyone will use. This","sidebar":"tutorialSidebar"},"tutorials/issue-a-credential":{"id":"tutorials/issue-a-credential","title":"Issue a credential","description":"In this tutorial we will issue a credential from the Issuer to a Holder. We will start with setting up both their agents with the minimal configuration required to follow this tutorial. It is assumed that there is a connection between the Issuer and the Holder and the Issuer also has a registered schema and credential definition. After initializing the Issuer will send a credential to the holder, and will then accept this credential and automatically store it in their wallet.","sidebar":"tutorialSidebar"},"tutorials/mediation":{"id":"tutorials/mediation","title":"Mediation","description":"This section assumes that you have:","sidebar":"tutorialSidebar"},"tutorials/registering-schema-and-credential-definition":{"id":"tutorials/registering-schema-and-credential-definition","title":"Registering a schema and credential definition on an AnonCreds Registry","description":"In this tutorial we will register a schema and credential definition on an AnonCredsRegistry e.g. Hyperledger Indy ledger indy-vdr, cheqd.","sidebar":"tutorialSidebar"},"updating/index":{"id":"updating/index","title":"Updating Credo","description":"This section will cover everything you need to know about updating Credo to a newer version.","sidebar":"tutorialSidebar"},"updating/update-assistant":{"id":"updating/update-assistant","title":"Update Assistant","description":"The Update Assistant helps you update the storage objects from Credo to newer versions. This documents describes the different ways you can leverage the Update Assistant from fully managed to more manual approaches.","sidebar":"tutorialSidebar"},"updating/update-indy-sdk-to-askar":{"id":"updating/update-indy-sdk-to-askar","title":"Migrating from an Indy SDK Wallet to Aries Askar","description":"This documentation explains the process of migrating your Indy SDK wallet to Aries Askar.","sidebar":"tutorialSidebar"},"updating/versions/0.1-to-0.2":{"id":"updating/versions/0.1-to-0.2","title":"Migrating from Credo 0.1.0 to 0.2.x","description":"This document describes everything you need to know for updating Credo 0.1.0 to 0.2.x. If you\'re not aware of how updating in Credo works make sure to first read the guide on Updating Credo.","sidebar":"tutorialSidebar"},"updating/versions/0.2-to-0.3":{"id":"updating/versions/0.2-to-0.3","title":"Migrating from Credo 0.2.x to 0.3.x","description":"This document describes everything you need to know for updating Credo 0.2.x to 0.3.x. If you\'re not aware of how updating in Credo works make sure to first read the guide on Updating Credo.","sidebar":"tutorialSidebar"},"updating/versions/0.3-to-0.4":{"id":"updating/versions/0.3-to-0.4","title":"Migrating from Credo 0.3.x to 0.4.x","description":"This document describes everything you need to know for updating Credo 0.3.x to 0.4.x. If you\'re not aware of how updating in Credo works make sure to first read the guide on Updating Credo.","sidebar":"tutorialSidebar"},"updating/versions/0.4-to-0.5":{"id":"updating/versions/0.4-to-0.5","title":"Migrating from Credo 0.4.x to 0.5.x","description":"This document describes everything you need to know for updating Credo 0.4.x to 0.5.x. If you\'re not aware of how updating in Credo works make sure to first read the guide on Updating Credo, and the Update Assistant. Starting from Credo 0.5, we now support migration of tenant storage in addition to the root wallet. If you\'re using the tenants module, make sure to read the guides carefully."}}}')}}]);